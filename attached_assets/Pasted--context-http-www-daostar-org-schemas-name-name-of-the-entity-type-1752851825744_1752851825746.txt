{
    "@context": "http://www.daostar.org/schemas",
    "name": "<name of the entity>",
    "type": "<type of the entity, e.g. DAO or Foundation>",
    "grantPools": [
        {
            "type": "GrantPool",
            "name": "<The name of the grant pool.>",
            "applications": [
                {
                    "type": "GrantApplication",
                    "id": "<The uid of the proposal, in the format specified above.>",
                    "grantPoolsURI": "<A URI pointing to the grant pools published by the entity.>",
                    "grantPoolId": "<The id of the grant pool.>",
                    "grantPoolName": "<The name of the grant pool.>",
                    "projectsURI": "<The URI of an organizationâ€™s projects applying for grant funding.>",
                    "projectId": "<The id of the project.>",
                    "projectName": "<The name of the project.>",
                    "createdAt": "<ISO DateTime>",
                    "contentURI": "<A URI pointing to the publicly accessible content of the application.>",
                    "discussionsTo": "<OPTIONAL: A URI pointing to a fixed channel, e.g., a forum discussion thread or messaging chat, where the granter(s), grantee(s), and other stakeholders can discuss the grant.>",
                    "licenseURI": "<OPTIONAL: A URI pointing to the project's open-source license or relevant licensing details>",
                    "isInactive": "<OPTIONAL: A Boolean value to indicate if the project is inactive>",
                    "applicationCompletionRate": "<OPTIONAL: A numerical percentage value indicating the completion status of the grant application>",
                    "socials": [
                        {
                            "platform": "<Enum value: Twitter | Discord | Telegram | LinkedIn | GitHub | Farcaster | Lens>",
                            "url": "<The URI of the project's profile on the specified platform>"
                        }
                    ],
                    "fundsAsked": [
                        {
                            "amount": "<The amount of funding asked>",
                            "denomination": "<The denomination of currency asked>"
                        }
                    ],
                    "fundsAskedInUSD": "<OPTIONAL: The amount of funding asked normalized to USD>",
                    "fundsApproved": [
                        {
                            "amount": "<The amount of funding approved>",
                            "denomination": "<The denomination of currency approved>"
                        }
                    ],
                    "fundsApprovedInUSD": "<OPTIONAL: The amount of funding approved normalized to USD>",
                    "payoutAddress": {
                        "type": "<e.g. EthereumAddress, CAIP10Address, IBAN, SWIFT/BIC, etc.>",
                        "value": "<subject's identifier, e.g. their Ethereum address, CAIP-10 address, IBAN, etc.>"
                    },
                    "status": "<RECOMMENDED: The current application status. Enum value: 
                      'pending' (submitted but not yet reviewed), 
                      'in_review' (currently being evaluated), 
                      'approved' (accepted for funding), 
                      'funded' (funding has been disbursed), 
                      'rejected' (not selected for funding), 
                      'completed' (project successfully delivered and grant conditions met)>",
                    "payouts": [
                        {
                            "type": "<The type of the payout transaction, e.g., CallDataEVM, StripePayment, InvoicePayment, OnchainTransaction>",
                            "value": {
                                "<Details specific to the payout type, such as operation, from, to, value, data, and other relevant transaction details>"
                            },
                            "proof": "<Evidence of the payout, such as a transaction hash, payment ID, or a link to verify the payout>"
                        }
                    ],
                    "extensions": "<OPTIONAL: Implementation-specific extensions and additional metadata>"

                }
            ]
        }
    ]
}